#+TITLE: Emacs tasks (ET)
#+SETUPFILE: setupfile.org

* TODO About
ET is a simple build tool like ~make~, but for literate programming environments.

It allows you to run tasks defined in code blocks in org-mode files, such as this README.org. For instance:

#+begin_src org
  ,#+name: demo1
  ,#+begin_src sh :task yes
    echo "Hey there literates!"
  ,#+end_src
#+end_src

#+name: demo1
#+begin_src sh :task yes
  echo "Hey there literates!"
#+end_src

#+begin_src sh :results verbatim :exports results
  java -jar target/et.jar README.org demo1
#+end_src

#+RESULTS:
: ~ Task definition {:path "README.org", :args [], :task {}, :task-name "demo1"}
: ~ Running task demo1 {:task yes}
:
: Hey there literates!

** Supports any language
Code blocks can be written in any language, so by extension ET supports any language and allows changing ~shebang~.

#+begin_src org
  ,#+name: demo2
  ,#+begin_src ruby :task yes :shebang "#!/usr/bin/env ruby"
    puts "Hello literate Rubyists!"
  ,#+end_src
#+end_src

#+name: demo2
#+begin_src ruby :task yes :shebang "#!/usr/bin/env ruby"
  puts "Hello literate Rubyists!"
#+end_src

#+begin_src sh :results verbatim :exports results
  java -jar target/et.jar README.org demo2
#+end_src

#+RESULTS:
: ~ Task definition {:path "README.org", :args [], :task {}, :task-name "demo2"}
: ~ Running task demo2 {:task yes, :shebang "#!/usr/bin/env ruby"}
:
: Hello literate Rubyists!

** Command-line arguments

#+begin_src org
  ,#+name: demo3
  ,#+begin_src ruby :task yes :shebang "#!/usr/bin/env ruby"
    puts "Hello literate Rubyists!"
  ,#+end_src
#+end_src

#+name: demo3
#+begin_src ruby :task yes :shebang "#!/usr/bin/env ruby"
  ARGV.each { |name| puts "Hey there #{name}!" }
#+end_src

#+begin_src sh :results verbatim :exports results
  java -jar target/et.jar README.org demo3 Petr Pavel Jakub
#+end_src

#+RESULTS:
: ~ Task definition {:path "README.org", :args ["Petr" "Pavel" "Jakub"], :task {}, :task-name "demo3"}
: ~ Running task demo3 {:task yes, :shebang "#!/usr/bin/env ruby"}
:
:

* Custom runner

* Runner
** Usage
#+begin_src clojure
  (ns runner (:require [jakub-stastny.et.runner :refer [run]]))

  (defn args-to-tasks [args])

  (def config
    {})

  (defn -main [& args] (run config args))
#+end_src

#+begin_src sh
  clj -M -m jakub-stastny.et.runner et-examples.org run a b c
  clj -M -m jakub-stastny.et.runner -T
  clj -M -m jakub-stastny.et.runner -T et-examples.org
#+end_src

* Hosting

#+name: upload
#+begin_src sh :task yes :doc "...."
  scp target/et.jar home:/bm/www/jar/et.jar
#+end_src

* TODO Documentation
- Describe how to use PROPERTIES to override shebang (say to bb)

* TODO This will only look good in org-mode-generated docs.
Add generated README.html and hope GH picks it before README.org.

* Development

- Here's the [[./development.org][development]] chapter.
- Here's the [[./export.org][publishing]] chapter.
